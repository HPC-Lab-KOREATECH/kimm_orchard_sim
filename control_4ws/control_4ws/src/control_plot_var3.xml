<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab tab_name="tab1" containers="1">
   <Container>
    <DockSplitter orientation="-" sizes="1" count="1">
     <DockSplitter orientation="|" sizes="0.501969;0.498031" count="2">
      <DockSplitter orientation="-" sizes="0.498874;0.501126" count="2">
       <DockArea name="...">
        <plot mode="XYPlot" flip_x="false" style="Lines" flip_y="false">
         <range top="2.495873" left="0.486343" bottom="-3.722726" right="13.336916"/>
         <limitY/>
         <curve curve_x="/Local/utm/point/x" curve_y="/Local/utm/point/y" name="/Local/utm/point/[x;y]" color="#0e30ff"/>
         <curve curve_x="/Planning/local_path/data.0" curve_y="/Planning/local_path/data.1" name="/Planning/local_path/data.[0;1]" color="#d62728"/>
         <curve curve_x="/Planning/local_path/data.300" curve_y="/Planning/local_path/data.301" name="/Planning/local_path/data.30[0;1]" color="#c9241a"/>
         <curve curve_x="/Planning/local_path/data.32" curve_y="/Planning/local_path/data.33" name="/Planning/local_path/data.3[2;3]" color="#ff7f0e"/>
         <curve curve_x="/Planning/local_path/data.86" curve_y="/Planning/local_path/data.87" name="/Planning/local_path/data.8[6;7]" color="#f14cc1"/>
         <curve curve_x="/Planning/local_path/data.210" curve_y="/Planning/local_path/data.211" name="/Planning/local_path/data.21[0;1]" color="#bd6772"/>
         <curve curve_x="/Planning/local_path/data.278" curve_y="/Planning/local_path/data.279" name="/Planning/local_path/data.27[8;9]" color="#df5852"/>
         <curve curve_x="/Planning/local_path/data.370" curve_y="/Planning/local_path/data.371" name="/Planning/local_path/data.37[0;1]" color="#bd5622"/>
         <curve curve_x="/Planning/local_path/data.462" curve_y="/Planning/local_path/data.463" name="/Planning/local_path/data.46[2;3]" color="#b43a1f"/>
         <curve curve_x="/Planning/local_path/data.522" curve_y="/Planning/local_path/data.523" name="/Planning/local_path/data.52[2;3]" color="#d62728"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
         <range top="0.800000" left="1694307644.800287" bottom="-0.800000" right="1694307705.639751"/>
         <limitY max="0.8" min="-0.8"/>
         <curve name="/ERP/serial_data/data.4" color="#d62728"/>
         <curve name="/Control/serial_data/data.4" color="#1ac938"/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockSplitter orientation="-" sizes="0.333709;0.332582;0.333709" count="3">
       <DockArea name="...">
        <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
         <range top="0.700000" left="1694307685.735724" bottom="-0.700000" right="1694307705.637470"/>
         <limitY max="0.7" min="-0.7"/>
         <curve name="/Control/tmp_plot_val/data.0" color="#1ac938"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
         <range top="20.000000" left="1694307685.735724" bottom="-0.500000" right="1694307705.637470"/>
         <limitY max="20" min="-0.5"/>
         <curve name="/Control/tmp_plot_val/data.1" color="#ff7f0e"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
         <range top="8.000000" left="1694307644.800287" bottom="-0.500000" right="1694307705.639751"/>
         <limitY max="8" min="-0.5"/>
         <curve name="/Control/serial_data/data.3" color="#ff7f0e"/>
         <curve name="/ERP/serial_data/data.3" color="#f14cc1"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="0"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <default delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS2 Topic Subscriber"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

